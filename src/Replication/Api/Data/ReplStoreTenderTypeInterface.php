<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Replication\Api\Data;

interface ReplStoreTenderTypeInterface
{

    /**
     * @param string $AboveMinimumTenderId
     * @return $this
     */
    public function setAboveMinimumTenderId($AboveMinimumTenderId);

    /**
     * @return string
     */
    public function getAboveMinimumTenderId();

    /**
     * @param int $AllowOverTender
     * @return $this
     */
    public function setAllowOverTender($AllowOverTender);

    /**
     * @return int
     */
    public function getAllowOverTender();

    /**
     * @param int $AllowUnderTender
     * @return $this
     */
    public function setAllowUnderTender($AllowUnderTender);

    /**
     * @return int
     */
    public function getAllowUnderTender();

    /**
     * @param int $AllowVoiding
     * @return $this
     */
    public function setAllowVoiding($AllowVoiding);

    /**
     * @return int
     */
    public function getAllowVoiding();

    /**
     * @param string $ChangeTenderId
     * @return $this
     */
    public function setChangeTenderId($ChangeTenderId);

    /**
     * @return string
     */
    public function getChangeTenderId();

    /**
     * @param int $CountingRequired
     * @return $this
     */
    public function setCountingRequired($CountingRequired);

    /**
     * @return int
     */
    public function getCountingRequired();

    /**
     * @param int $ForeignCurrency
     * @return $this
     */
    public function setForeignCurrency($ForeignCurrency);

    /**
     * @return int
     */
    public function getForeignCurrency();

    /**
     * @param boolean $IsDeleted
     * @return $this
     */
    public function setIsDeleted($IsDeleted);

    /**
     * @return boolean
     */
    public function getIsDeleted();

    /**
     * @param float $MaximumOverTenderAmount
     * @return $this
     */
    public function setMaximumOverTenderAmount($MaximumOverTenderAmount);

    /**
     * @return float
     */
    public function getMaximumOverTenderAmount();

    /**
     * @param float $MinimumChangeAmount
     * @return $this
     */
    public function setMinimumChangeAmount($MinimumChangeAmount);

    /**
     * @return float
     */
    public function getMinimumChangeAmount();

    /**
     * @param string $Name
     * @return $this
     */
    public function setName($Name);

    /**
     * @return string
     */
    public function getName();

    /**
     * @param string $OmniTenderTypeId
     * @return $this
     */
    public function setOmniTenderTypeId($OmniTenderTypeId);

    /**
     * @return string
     */
    public function getOmniTenderTypeId();

    /**
     * @param int $OpenDrawer
     * @return $this
     */
    public function setOpenDrawer($OpenDrawer);

    /**
     * @return int
     */
    public function getOpenDrawer();

    /**
     * @param int $ReturnAllowed
     * @return $this
     */
    public function setReturnAllowed($ReturnAllowed);

    /**
     * @return int
     */
    public function getReturnAllowed();

    /**
     * @param float $Rounding
     * @return $this
     */
    public function setRounding($Rounding);

    /**
     * @return float
     */
    public function getRounding();

    /**
     * @param int $RoundingMethode
     * @return $this
     */
    public function setRoundingMethode($RoundingMethode);

    /**
     * @return int
     */
    public function getRoundingMethode();

    /**
     * @param string $StoreID
     * @return $this
     */
    public function setStoreID($StoreID);

    /**
     * @return string
     */
    public function getStoreID();

    /**
     * @param int $TenderFunction
     * @return $this
     */
    public function setTenderFunction($TenderFunction);

    /**
     * @return int
     */
    public function getTenderFunction();

    /**
     * @param string $TenderTypeId
     * @return $this
     */
    public function setTenderTypeId($TenderTypeId);

    /**
     * @return string
     */
    public function getTenderTypeId();

    /**
     * @param int $ValidOnMobilePOS
     * @return $this
     */
    public function setValidOnMobilePOS($ValidOnMobilePOS);

    /**
     * @return int
     */
    public function getValidOnMobilePOS();

    /**
     * @param string $scope
     * @return $this
     */
    public function setScope($scope);

    /**
     * @return string
     */
    public function getScope();

    /**
     * @param int $scope_id
     * @return $this
     */
    public function setScopeId($scope_id);

    /**
     * @return int
     */
    public function getScopeId();

    /**
     * @param boolean $processed
     * @return $this
     */
    public function setProcessed($processed);

    /**
     * @return boolean
     */
    public function getProcessed();

    /**
     * @param boolean $is_updated
     * @return $this
     */
    public function setIsUpdated($is_updated);

    /**
     * @return boolean
     */
    public function getIsUpdated();

    /**
     * @param boolean $is_failed
     * @return $this
     */
    public function setIsFailed($is_failed);

    /**
     * @return boolean
     */
    public function getIsFailed();

    /**
     * @param string $created_at
     * @return $this
     */
    public function setCreatedAt($created_at);

    /**
     * @return string
     */
    public function getCreatedAt();

    /**
     * @param string $updated_at
     * @return $this
     */
    public function setUpdatedAt($updated_at);

    /**
     * @return string
     */
    public function getUpdatedAt();

    /**
     * @param string $checksum
     * @return $this
     */
    public function setChecksum($checksum);

    /**
     * @return string
     */
    public function getChecksum();

    /**
     * @param string $processed_at
     * @return $this
     */
    public function setProcessedAt($processed_at);

    /**
     * @return string
     */
    public function getProcessedAt();


}

