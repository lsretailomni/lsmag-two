<?php
declare(strict_types=1);

namespace Ls\Replication\Test\Integration;

use PHPUnit\Framework\TestCase;

define('CS_URL_1', getenv('CS_URL'));
define('CS_VERSION_1', getenv('CS_VERSION'));
define('LS_VERSION_1', getenv('LS_VERSION'));
define('CS_STORE_1', getenv('CS_STORE'));
define('ENABLED_1', getenv('ENABLED'));
define('SAMPLE_FLAT_REPLICATION_CRON_URL', getenv('SAMPLE_FLAT_REPLICATION_CRON_URL'));
define('SAMPLE_FLAT_REPLICATION_CRON_NAME', getenv('SAMPLE_FLAT_REPLICATION_CRON_NAME'));
define('SAMPLE_MAGENTO_REPLICATION_CRON_NAME', getenv('SAMPLE_MAGENTO_REPLICATION_CRON_NAME'));
define('DEFAULT_BATCH_SIZE', getenv('DEFAULT_BATCH_SIZE'));
define('SAMPLE_SIMPLE_ITEM_ID', getenv('SAMPLE_SIMPLE_ITEM_ID'));
define('SAMPLE_DISCOUNTED_CONFIGURABLE_ITEM_ID', getenv('SAMPLE_DISCOUNTED_CONFIGURABLE_ITEM_ID'));
define('SAMPLE_CONFIGURABLE_ITEM_ID', getenv('SAMPLE_CONFIGURABLE_ITEM_ID'));
define('SAMPLE_CONFIGURABLE_VARIANT_ID', getenv('SAMPLE_CONFIGURABLE_VARIANT_ID'));
define('SAMPLE_ATTRIBUTE_CODE', getenv('SAMPLE_ATTRIBUTE_CODE'));
define('SAMPLE_COUNTRY_CODE', getenv('SAMPLE_COUNTRY_CODE'));
define('SAMPLE_OFFER_NO', getenv('SAMPLE_OFFER_NO'));
define('SAMPLE_VALIDATION_PERIOD_ID', getenv('SAMPLE_VALIDATION_PERIOD_ID'));
define('SAMPLE_HIERARCHY_NAV_ID', getenv('SAMPLE_HIERARCHY_NAV_ID'));
define('SAMPLE_UOM', getenv('SAMPLE_UOM'));
define('SAMPLE_UOM_2', getenv('SAMPLE_UOM_2'));
define('SAMPLE_VENDOR_ID', getenv('SAMPLE_VENDOR_ID'));
define('SAMPLE_BUSINESS_TAX_GROUP', getenv('SAMPLE_BUSINESS_TAX_GROUP'));
define('SAMPLE_CASH_TENDER_TYPE_ID', getenv('SAMPLE_CASH_TENDER_TYPE_ID'));
define('SAMPLE_STORE_ID', getenv('SAMPLE_STORE_ID'));
define('SAMPLE_LANGUAGE_CODE', getenv('SAMPLE_LANGUAGE_CODE'));
define('SAMPLE_LOG_FILE_NAME', getenv('SAMPLE_LOG_FILE_NAME'));
define('SAMPLE_HARD_ATTRIBUTE', getenv('SAMPLE_HARD_ATTRIBUTE'));
define('SAMPLE_VARIANT_ATTRIBUTE', getenv('SAMPLE_VARIANT_ATTRIBUTE'));
define('SAMPLE_VISUAL_SWATCH_ATTRIBUTE_CODE', getenv('SAMPLE_VISUAL_SWATCH_ATTRIBUTE_CODE'));
define('SAMPLE_HIERARCHY_NODE_NAV_ID', getenv('SAMPLE_HIERARCHY_NODE_NAV_ID'));
define('SAMPLE_HIERARCHY_NODE_NAV_ID_2', getenv('SAMPLE_HIERARCHY_NODE_NAV_ID_2'));
define('SAMPLE_UPDATE_HIERARCHY_NODE_NAV_ID', getenv('SAMPLE_UPDATE_HIERARCHY_NODE_NAV_ID'));
define('SAMPLE_CONFIGURABLE_UOM_ITEM_ID', getenv('SAMPLE_CONFIGURABLE_UOM_ITEM_ID'));
define('SAMPLE_CONFIGURABLE_VARIANT_ITEM_ID', getenv('SAMPLE_CONFIGURABLE_VARIANT_ITEM_ID'));
define('SAMPLE_CONFIGURABLE2_VARIANT_ITEM_ID', getenv('SAMPLE_CONFIGURABLE2_VARIANT_ITEM_ID'));
define('SAMPLE_STANDARD_VARIANT_ITEM_ID', getenv('SAMPLE_STANDARD_VARIANT_ITEM_ID'));
define('SAMPLE_HIERARCHY_LEAF', getenv('SAMPLE_HIERARCHY_LEAF'));
define('SAMPLE_CURRENCY_CODE', getenv('SAMPLE_CURRENCY_CODE'));
define('SAMPLE_OFFER_CATEGORY_1', getenv('SAMPLE_OFFER_CATEGORY_1'));
define('SAMPLE_OFFER_CATEGORY_2', getenv('SAMPLE_OFFER_CATEGORY_2'));
define('SAMPLE_OFFER_ITEM_1', getenv('SAMPLE_OFFER_ITEM_1'));
define('SAMPLE_VALID_VALIDATION_PERIOD_ID', getenv('SAMPLE_VALID_VALIDATION_PERIOD_ID'));
define('SAMPLE_STORE_GROUP_CODES', getenv('SAMPLE_STORE_GROUP_CODES'));
define('SAMPLE_PRICE_GROUP', getenv('SAMPLE_PRICE_GROUP'));
class AbstractIntegrationTest extends TestCase
{
    public const CS_URL = CS_URL_1;
    public const CS_VERSION = CS_VERSION_1;
    public const LS_VERSION = LS_VERSION_1;
    public const CS_STORE = CS_STORE_1;
    public const ENABLED = ENABLED_1;
    public const SAMPLE_FLAT_REPLICATION_CRON_URL = SAMPLE_FLAT_REPLICATION_CRON_URL;
    public const SAMPLE_FLAT_REPLICATION_CRON_NAME = SAMPLE_FLAT_REPLICATION_CRON_NAME;
    public const SAMPLE_MAGENTO_REPLICATION_CRON_NAME = SAMPLE_MAGENTO_REPLICATION_CRON_NAME;

    public const DEFAULT_BATCH_SIZE = DEFAULT_BATCH_SIZE;
    public const SAMPLE_SIMPLE_ITEM_ID = SAMPLE_SIMPLE_ITEM_ID;
    public const SAMPLE_DISCOUNTED_CONFIGURABLE_ITEM_ID = SAMPLE_DISCOUNTED_CONFIGURABLE_ITEM_ID;
    public const SAMPLE_CONFIGURABLE_ITEM_ID = SAMPLE_CONFIGURABLE_ITEM_ID;
    public const SAMPLE_CONFIGURABLE_VARIANT_ID = SAMPLE_CONFIGURABLE_VARIANT_ID;
    public const SAMPLE_ATTRIBUTE_CODE = SAMPLE_ATTRIBUTE_CODE;
    public const SAMPLE_COUNTRY_CODE = SAMPLE_COUNTRY_CODE;
    public const SAMPLE_OFFER_NO = SAMPLE_OFFER_NO;
    public const SAMPLE_VALIDATION_PERIOD_ID = SAMPLE_VALIDATION_PERIOD_ID;
    public const SAMPLE_HIERARCHY_NAV_ID = SAMPLE_HIERARCHY_NAV_ID;
    public const SAMPLE_UOM = SAMPLE_UOM;
    public const SAMPLE_UOM_2 = SAMPLE_UOM_2;
    public const SAMPLE_VENDOR_ID = SAMPLE_VENDOR_ID;
    public const SAMPLE_BUSINESS_TAX_GROUP = SAMPLE_BUSINESS_TAX_GROUP;
    public const SAMPLE_CASH_TENDER_TYPE_ID = SAMPLE_CASH_TENDER_TYPE_ID;
    public const SAMPLE_STORE_ID = SAMPLE_STORE_ID;
    public const SAMPLE_LANGUAGE_CODE = SAMPLE_LANGUAGE_CODE;
    public const SAMPLE_LOG_FILE_NAME = SAMPLE_LOG_FILE_NAME;
    public const SAMPLE_HARD_ATTRIBUTE = SAMPLE_HARD_ATTRIBUTE;
    public const SAMPLE_VARIANT_ATTRIBUTE = SAMPLE_VARIANT_ATTRIBUTE;
    public const SAMPLE_VISUAL_SWATCH_ATTRIBUTE_CODE = SAMPLE_VISUAL_SWATCH_ATTRIBUTE_CODE;
    public const SAMPLE_HIERARCHY_NODE_NAV_ID = SAMPLE_HIERARCHY_NODE_NAV_ID;
    public const SAMPLE_HIERARCHY_NODE_NAV_ID_2 = SAMPLE_HIERARCHY_NODE_NAV_ID_2;
    public const SAMPLE_UPDATE_HIERARCHY_NODE_NAV_ID = SAMPLE_UPDATE_HIERARCHY_NODE_NAV_ID;
    public const SAMPLE_CONFIGURABLE_UOM_ITEM_ID = SAMPLE_CONFIGURABLE_UOM_ITEM_ID;
    public const SAMPLE_CONFIGURABLE_VARIANT_ITEM_ID = SAMPLE_CONFIGURABLE_VARIANT_ITEM_ID;
    public const SAMPLE_CONFIGURABLE2_VARIANT_ITEM_ID = SAMPLE_CONFIGURABLE2_VARIANT_ITEM_ID;
    public const SAMPLE_STANDARD_VARIANT_ITEM_ID = SAMPLE_STANDARD_VARIANT_ITEM_ID;
    public const SAMPLE_HIERARCHY_LEAF = SAMPLE_HIERARCHY_LEAF;
    public const SAMPLE_CURRENCY_CODE = SAMPLE_CURRENCY_CODE;
    public const SAMPLE_OFFER_CATEGORY_1 = SAMPLE_OFFER_CATEGORY_1;
    public const SAMPLE_OFFER_CATEGORY_2 = SAMPLE_OFFER_CATEGORY_2;
    public const SAMPLE_OFFER_ITEM_1 = SAMPLE_OFFER_ITEM_1;
    public const SAMPLE_VALID_VALIDATION_PERIOD_ID = SAMPLE_VALID_VALIDATION_PERIOD_ID;
    public const SAMPLE_STORE_GROUP_CODES = SAMPLE_STORE_GROUP_CODES;
    public const SAMPLE_PRICE_GROUP = SAMPLE_PRICE_GROUP;

    /**
     * Get environment variable value given name
     *
     * @param $name
     * @return array|false|string
     */
    public function getEnvironmentVariableValueGivenName($name)
    {
        // phpcs:ignore Magento2.Functions.DiscouragedFunction
        return getenv($name);
    }

    public function testExecute()
    {
        $this->assertEquals(1, 1);
    }
}
