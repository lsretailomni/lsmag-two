<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Replication\Model;

use Magento\Framework\Model\AbstractModel;
use Magento\Framework\DataObject\IdentityInterface;
use Ls\Replication\Api\Data\ReplStoreTenderTypeInterface;

class ReplStoreTenderType extends AbstractModel implements ReplStoreTenderTypeInterface, IdentityInterface
{

    public const CACHE_TAG = 'ls_replication_repl_store_tender_type';

    protected $_cacheTag = 'ls_replication_repl_store_tender_type';

    protected $_eventPrefix = 'ls_replication_repl_store_tender_type';

    /**
     * @property string $AboveMinimumTenderId
     */
    protected $AboveMinimumTenderId = null;

    /**
     * @property int $AllowOverTender
     */
    protected $AllowOverTender = null;

    /**
     * @property int $AllowUnderTender
     */
    protected $AllowUnderTender = null;

    /**
     * @property int $AllowVoiding
     */
    protected $AllowVoiding = null;

    /**
     * @property string $ChangeTenderId
     */
    protected $ChangeTenderId = null;

    /**
     * @property int $CountingRequired
     */
    protected $CountingRequired = null;

    /**
     * @property int $ForeignCurrency
     */
    protected $ForeignCurrency = null;

    /**
     * @property boolean $IsDeleted
     */
    protected $IsDeleted = null;

    /**
     * @property float $MaximumOverTenderAmount
     */
    protected $MaximumOverTenderAmount = null;

    /**
     * @property float $MinimumChangeAmount
     */
    protected $MinimumChangeAmount = null;

    /**
     * @property string $Name
     */
    protected $Name = null;

    /**
     * @property string $OmniTenderTypeId
     */
    protected $OmniTenderTypeId = null;

    /**
     * @property int $OpenDrawer
     */
    protected $OpenDrawer = null;

    /**
     * @property int $ReturnAllowed
     */
    protected $ReturnAllowed = null;

    /**
     * @property float $Rounding
     */
    protected $Rounding = null;

    /**
     * @property int $RoundingMethode
     */
    protected $RoundingMethode = null;

    /**
     * @property string $StoreID
     */
    protected $StoreID = null;

    /**
     * @property int $TenderFunction
     */
    protected $TenderFunction = null;

    /**
     * @property string $TenderTypeId
     */
    protected $TenderTypeId = null;

    /**
     * @property int $ValidOnMobilePOS
     */
    protected $ValidOnMobilePOS = null;

    /**
     * @property string $scope
     */
    protected $scope = null;

    /**
     * @property int $scope_id
     */
    protected $scope_id = null;

    /**
     * @property boolean $processed
     */
    protected $processed = null;

    /**
     * @property boolean $is_updated
     */
    protected $is_updated = null;

    /**
     * @property boolean $is_failed
     */
    protected $is_failed = null;

    /**
     * @property string $created_at
     */
    protected $created_at = null;

    /**
     * @property string $updated_at
     */
    protected $updated_at = null;

    /**
     * @property string $checksum
     */
    protected $checksum = null;

    /**
     * @property string $processed_at
     */
    protected $processed_at = null;

    public function _construct()
    {
        $this->_init( 'Ls\Replication\Model\ResourceModel\ReplStoreTenderType' );
    }

    public function getIdentities()
    {
        return [ self::CACHE_TAG . '_' . $this->getId() ];
    }

    /**
     * @param string $AboveMinimumTenderId
     * @return $this
     */
    public function setAboveMinimumTenderId($AboveMinimumTenderId)
    {
        $this->setData( 'AboveMinimumTenderId', $AboveMinimumTenderId );
        $this->AboveMinimumTenderId = $AboveMinimumTenderId;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getAboveMinimumTenderId()
    {
        return $this->getData( 'AboveMinimumTenderId' );
    }

    /**
     * @param int $AllowOverTender
     * @return $this
     */
    public function setAllowOverTender($AllowOverTender)
    {
        $this->setData( 'AllowOverTender', $AllowOverTender );
        $this->AllowOverTender = $AllowOverTender;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowOverTender()
    {
        return $this->getData( 'AllowOverTender' );
    }

    /**
     * @param int $AllowUnderTender
     * @return $this
     */
    public function setAllowUnderTender($AllowUnderTender)
    {
        $this->setData( 'AllowUnderTender', $AllowUnderTender );
        $this->AllowUnderTender = $AllowUnderTender;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowUnderTender()
    {
        return $this->getData( 'AllowUnderTender' );
    }

    /**
     * @param int $AllowVoiding
     * @return $this
     */
    public function setAllowVoiding($AllowVoiding)
    {
        $this->setData( 'AllowVoiding', $AllowVoiding );
        $this->AllowVoiding = $AllowVoiding;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowVoiding()
    {
        return $this->getData( 'AllowVoiding' );
    }

    /**
     * @param string $ChangeTenderId
     * @return $this
     */
    public function setChangeTenderId($ChangeTenderId)
    {
        $this->setData( 'ChangeTenderId', $ChangeTenderId );
        $this->ChangeTenderId = $ChangeTenderId;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getChangeTenderId()
    {
        return $this->getData( 'ChangeTenderId' );
    }

    /**
     * @param int $CountingRequired
     * @return $this
     */
    public function setCountingRequired($CountingRequired)
    {
        $this->setData( 'CountingRequired', $CountingRequired );
        $this->CountingRequired = $CountingRequired;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getCountingRequired()
    {
        return $this->getData( 'CountingRequired' );
    }

    /**
     * @param int $ForeignCurrency
     * @return $this
     */
    public function setForeignCurrency($ForeignCurrency)
    {
        $this->setData( 'ForeignCurrency', $ForeignCurrency );
        $this->ForeignCurrency = $ForeignCurrency;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getForeignCurrency()
    {
        return $this->getData( 'ForeignCurrency' );
    }

    /**
     * @param boolean $IsDeleted
     * @return $this
     */
    public function setIsDeleted($IsDeleted)
    {
        $this->setData( 'IsDeleted', $IsDeleted );
        $this->IsDeleted = $IsDeleted;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsDeleted()
    {
        return $this->getData( 'IsDeleted' );
    }

    /**
     * @param float $MaximumOverTenderAmount
     * @return $this
     */
    public function setMaximumOverTenderAmount($MaximumOverTenderAmount)
    {
        $this->setData( 'MaximumOverTenderAmount', $MaximumOverTenderAmount );
        $this->MaximumOverTenderAmount = $MaximumOverTenderAmount;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return float
     */
    public function getMaximumOverTenderAmount()
    {
        return $this->getData( 'MaximumOverTenderAmount' );
    }

    /**
     * @param float $MinimumChangeAmount
     * @return $this
     */
    public function setMinimumChangeAmount($MinimumChangeAmount)
    {
        $this->setData( 'MinimumChangeAmount', $MinimumChangeAmount );
        $this->MinimumChangeAmount = $MinimumChangeAmount;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return float
     */
    public function getMinimumChangeAmount()
    {
        return $this->getData( 'MinimumChangeAmount' );
    }

    /**
     * @param string $Name
     * @return $this
     */
    public function setName($Name)
    {
        $this->setData( 'Name', $Name );
        $this->Name = $Name;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getName()
    {
        return $this->getData( 'Name' );
    }

    /**
     * @param string $OmniTenderTypeId
     * @return $this
     */
    public function setOmniTenderTypeId($OmniTenderTypeId)
    {
        $this->setData( 'OmniTenderTypeId', $OmniTenderTypeId );
        $this->OmniTenderTypeId = $OmniTenderTypeId;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getOmniTenderTypeId()
    {
        return $this->getData( 'OmniTenderTypeId' );
    }

    /**
     * @param int $OpenDrawer
     * @return $this
     */
    public function setOpenDrawer($OpenDrawer)
    {
        $this->setData( 'OpenDrawer', $OpenDrawer );
        $this->OpenDrawer = $OpenDrawer;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getOpenDrawer()
    {
        return $this->getData( 'OpenDrawer' );
    }

    /**
     * @param int $ReturnAllowed
     * @return $this
     */
    public function setReturnAllowed($ReturnAllowed)
    {
        $this->setData( 'ReturnAllowed', $ReturnAllowed );
        $this->ReturnAllowed = $ReturnAllowed;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getReturnAllowed()
    {
        return $this->getData( 'ReturnAllowed' );
    }

    /**
     * @param float $Rounding
     * @return $this
     */
    public function setRounding($Rounding)
    {
        $this->setData( 'Rounding', $Rounding );
        $this->Rounding = $Rounding;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return float
     */
    public function getRounding()
    {
        return $this->getData( 'Rounding' );
    }

    /**
     * @param int $RoundingMethode
     * @return $this
     */
    public function setRoundingMethode($RoundingMethode)
    {
        $this->setData( 'RoundingMethode', $RoundingMethode );
        $this->RoundingMethode = $RoundingMethode;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getRoundingMethode()
    {
        return $this->getData( 'RoundingMethode' );
    }

    /**
     * @param string $StoreID
     * @return $this
     */
    public function setStoreID($StoreID)
    {
        $this->setData( 'StoreID', $StoreID );
        $this->StoreID = $StoreID;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getStoreID()
    {
        return $this->getData( 'StoreID' );
    }

    /**
     * @param int $TenderFunction
     * @return $this
     */
    public function setTenderFunction($TenderFunction)
    {
        $this->setData( 'TenderFunction', $TenderFunction );
        $this->TenderFunction = $TenderFunction;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getTenderFunction()
    {
        return $this->getData( 'TenderFunction' );
    }

    /**
     * @param string $TenderTypeId
     * @return $this
     */
    public function setTenderTypeId($TenderTypeId)
    {
        $this->setData( 'TenderTypeId', $TenderTypeId );
        $this->TenderTypeId = $TenderTypeId;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getTenderTypeId()
    {
        return $this->getData( 'TenderTypeId' );
    }

    /**
     * @param int $ValidOnMobilePOS
     * @return $this
     */
    public function setValidOnMobilePOS($ValidOnMobilePOS)
    {
        $this->setData( 'ValidOnMobilePOS', $ValidOnMobilePOS );
        $this->ValidOnMobilePOS = $ValidOnMobilePOS;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getValidOnMobilePOS()
    {
        return $this->getData( 'ValidOnMobilePOS' );
    }

    /**
     * @param string $scope
     * @return $this
     */
    public function setScope($scope)
    {
        $this->setData( 'scope', $scope );
        $this->scope = $scope;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getScope()
    {
        return $this->getData( 'scope' );
    }

    /**
     * @param int $scope_id
     * @return $this
     */
    public function setScopeId($scope_id)
    {
        $this->setData( 'scope_id', $scope_id );
        $this->scope_id = $scope_id;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return int
     */
    public function getScopeId()
    {
        return $this->getData( 'scope_id' );
    }

    /**
     * @param boolean $processed
     * @return $this
     */
    public function setProcessed($processed)
    {
        $this->setData( 'processed', $processed );
        $this->processed = $processed;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return boolean
     */
    public function getProcessed()
    {
        return $this->getData( 'processed' );
    }

    /**
     * @param boolean $is_updated
     * @return $this
     */
    public function setIsUpdated($is_updated)
    {
        $this->setData( 'is_updated', $is_updated );
        $this->is_updated = $is_updated;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsUpdated()
    {
        return $this->getData( 'is_updated' );
    }

    /**
     * @param boolean $is_failed
     * @return $this
     */
    public function setIsFailed($is_failed)
    {
        $this->setData( 'is_failed', $is_failed );
        $this->is_failed = $is_failed;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsFailed()
    {
        return $this->getData( 'is_failed' );
    }

    /**
     * @param string $created_at
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->setData( 'created_at', $created_at );
        $this->created_at = $created_at;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->getData( 'created_at' );
    }

    /**
     * @param string $updated_at
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->setData( 'updated_at', $updated_at );
        $this->updated_at = $updated_at;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->getData( 'updated_at' );
    }

    /**
     * @param string $checksum
     * @return $this
     */
    public function setChecksum($checksum)
    {
        $this->setData( 'checksum', $checksum );
        $this->checksum = $checksum;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getChecksum()
    {
        return $this->getData( 'checksum' );
    }

    /**
     * @param string $processed_at
     * @return $this
     */
    public function setProcessedAt($processed_at)
    {
        $this->setData( 'processed_at', $processed_at );
        $this->processed_at = $processed_at;
        $this->setDataChanges( TRUE );
        return $this;
    }

    /**
     * @return string
     */
    public function getProcessedAt()
    {
        return $this->getData( 'processed_at' );
    }


}

