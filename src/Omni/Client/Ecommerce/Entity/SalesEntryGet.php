<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\DocumentIdType;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\RequestInterface;

class SalesEntryGet implements RequestInterface
{

    /**
     * @property string $entryId
     */
    protected $entryId = null;

    /**
     * @property DocumentIdType $type
     */
    protected $type = null;

    /**
     * @param string $entryId
     * @return $this
     */
    public function setEntryId($entryId)
    {
        $this->entryId = $entryId;
        return $this;
    }

    /**
     * @return string
     */
    public function getEntryId()
    {
        return $this->entryId;
    }

    /**
     * @param DocumentIdType|string $type
     * @return $this
     * @throws InvalidEnumException
     */
    public function setType($type)
    {
        if ( ! $type instanceof DocumentIdType ) {
            if ( DocumentIdType::isValid( $type ) )
                $type = new DocumentIdType( $type );
            elseif ( DocumentIdType::isValidKey( $type ) )
                $type = new DocumentIdType( constant( "DocumentIdType::$type" ) );
            elseif ( ! $type instanceof DocumentIdType )
                throw new InvalidEnumException();
        }
        $this->type = $type->getValue();

        return $this;
    }

    /**
     * @return DocumentIdType
     */
    public function getType()
    {
        return $this->type;
    }


}

