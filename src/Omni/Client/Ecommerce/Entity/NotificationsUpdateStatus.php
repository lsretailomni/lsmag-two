<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\NotificationStatus;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\RequestInterface;

class NotificationsUpdateStatus implements RequestInterface
{

    /**
     * @property ArrayOfstring $notificationIds
     */
    protected $notificationIds = null;

    /**
     * @property string $cardId
     */
    protected $cardId = null;

    /**
     * @property NotificationStatus $notificationStatus
     */
    protected $notificationStatus = null;

    /**
     * @param ArrayOfstring $notificationIds
     * @return $this
     */
    public function setNotificationIds($notificationIds)
    {
        $this->notificationIds = $notificationIds;
        return $this;
    }

    /**
     * @return ArrayOfstring
     */
    public function getNotificationIds()
    {
        return $this->notificationIds;
    }

    /**
     * @param string $cardId
     * @return $this
     */
    public function setCardId($cardId)
    {
        $this->cardId = $cardId;
        return $this;
    }

    /**
     * @return string
     */
    public function getCardId()
    {
        return $this->cardId;
    }

    /**
     * @param NotificationStatus|string $notificationStatus
     * @return $this
     * @throws InvalidEnumException
     */
    public function setNotificationStatus($notificationStatus)
    {
        if ( ! $notificationStatus instanceof NotificationStatus ) {
            if ( NotificationStatus::isValid( $notificationStatus ) )
                $notificationStatus = new NotificationStatus( $notificationStatus );
            elseif ( NotificationStatus::isValidKey( $notificationStatus ) )
                $notificationStatus = new NotificationStatus( constant( "NotificationStatus::$notificationStatus" ) );
            elseif ( ! $notificationStatus instanceof NotificationStatus )
                throw new InvalidEnumException();
        }
        $this->notificationStatus = $notificationStatus->getValue();

        return $this;
    }

    /**
     * @return NotificationStatus
     */
    public function getNotificationStatus()
    {
        return $this->notificationStatus;
    }


}

