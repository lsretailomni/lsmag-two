<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\HierarchyDealType;
use Ls\Omni\Exception\InvalidEnumException;

class ReplHierarchyHospDeal
{

    /**
     * @property float $AddedAmount
     */
    protected $AddedAmount = null;

    /**
     * @property int $DealModSizeGroupIndex
     */
    protected $DealModSizeGroupIndex = null;

    /**
     * @property string $DealNo
     */
    protected $DealNo = null;

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property string $HierarchyCode
     */
    protected $HierarchyCode = null;

    /**
     * @property string $ImageId
     */
    protected $ImageId = null;

    /**
     * @property boolean $IsDeleted
     */
    protected $IsDeleted = null;

    /**
     * @property int $LineNo
     */
    protected $LineNo = null;

    /**
     * @property int $MaxSelection
     */
    protected $MaxSelection = null;

    /**
     * @property int $MinSelection
     */
    protected $MinSelection = null;

    /**
     * @property string $No
     */
    protected $No = null;

    /**
     * @property string $ParentNode
     */
    protected $ParentNode = null;

    /**
     * @property HierarchyDealType $Type
     */
    protected $Type = null;

    /**
     * @property string $UnitOfMeasure
     */
    protected $UnitOfMeasure = null;

    /**
     * @property string $VariantCode
     */
    protected $VariantCode = null;

    /**
     * @property string $scope
     */
    protected $scope = null;

    /**
     * @property int $scope_id
     */
    protected $scope_id = null;

    /**
     * @param float $AddedAmount
     * @return $this
     */
    public function setAddedAmount($AddedAmount)
    {
        $this->AddedAmount = $AddedAmount;
        return $this;
    }

    /**
     * @return float
     */
    public function getAddedAmount()
    {
        return $this->AddedAmount;
    }

    /**
     * @param int $DealModSizeGroupIndex
     * @return $this
     */
    public function setDealModSizeGroupIndex($DealModSizeGroupIndex)
    {
        $this->DealModSizeGroupIndex = $DealModSizeGroupIndex;
        return $this;
    }

    /**
     * @return int
     */
    public function getDealModSizeGroupIndex()
    {
        return $this->DealModSizeGroupIndex;
    }

    /**
     * @param string $DealNo
     * @return $this
     */
    public function setDealNo($DealNo)
    {
        $this->DealNo = $DealNo;
        return $this;
    }

    /**
     * @return string
     */
    public function getDealNo()
    {
        return $this->DealNo;
    }

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param string $HierarchyCode
     * @return $this
     */
    public function setHierarchyCode($HierarchyCode)
    {
        $this->HierarchyCode = $HierarchyCode;
        return $this;
    }

    /**
     * @return string
     */
    public function getHierarchyCode()
    {
        return $this->HierarchyCode;
    }

    /**
     * @param string $ImageId
     * @return $this
     */
    public function setImageId($ImageId)
    {
        $this->ImageId = $ImageId;
        return $this;
    }

    /**
     * @return string
     */
    public function getImageId()
    {
        return $this->ImageId;
    }

    /**
     * @param boolean $IsDeleted
     * @return $this
     */
    public function setIsDeleted($IsDeleted)
    {
        $this->IsDeleted = $IsDeleted;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsDeleted()
    {
        return $this->IsDeleted;
    }

    /**
     * @param int $LineNo
     * @return $this
     */
    public function setLineNo($LineNo)
    {
        $this->LineNo = $LineNo;
        return $this;
    }

    /**
     * @return int
     */
    public function getLineNo()
    {
        return $this->LineNo;
    }

    /**
     * @param int $MaxSelection
     * @return $this
     */
    public function setMaxSelection($MaxSelection)
    {
        $this->MaxSelection = $MaxSelection;
        return $this;
    }

    /**
     * @return int
     */
    public function getMaxSelection()
    {
        return $this->MaxSelection;
    }

    /**
     * @param int $MinSelection
     * @return $this
     */
    public function setMinSelection($MinSelection)
    {
        $this->MinSelection = $MinSelection;
        return $this;
    }

    /**
     * @return int
     */
    public function getMinSelection()
    {
        return $this->MinSelection;
    }

    /**
     * @param string $No
     * @return $this
     */
    public function setNo($No)
    {
        $this->No = $No;
        return $this;
    }

    /**
     * @return string
     */
    public function getNo()
    {
        return $this->No;
    }

    /**
     * @param string $ParentNode
     * @return $this
     */
    public function setParentNode($ParentNode)
    {
        $this->ParentNode = $ParentNode;
        return $this;
    }

    /**
     * @return string
     */
    public function getParentNode()
    {
        return $this->ParentNode;
    }

    /**
     * @param HierarchyDealType|string $Type
     * @return $this
     * @throws InvalidEnumException
     */
    public function setType($Type)
    {
        if ( ! $Type instanceof HierarchyDealType ) {
            if ( HierarchyDealType::isValid( $Type ) )
                $Type = new HierarchyDealType( $Type );
            elseif ( HierarchyDealType::isValidKey( $Type ) )
                $Type = new HierarchyDealType( constant( "HierarchyDealType::$Type" ) );
            elseif ( ! $Type instanceof HierarchyDealType )
                throw new InvalidEnumException();
        }
        $this->Type = $Type->getValue();

        return $this;
    }

    /**
     * @return HierarchyDealType
     */
    public function getType()
    {
        return $this->Type;
    }

    /**
     * @param string $UnitOfMeasure
     * @return $this
     */
    public function setUnitOfMeasure($UnitOfMeasure)
    {
        $this->UnitOfMeasure = $UnitOfMeasure;
        return $this;
    }

    /**
     * @return string
     */
    public function getUnitOfMeasure()
    {
        return $this->UnitOfMeasure;
    }

    /**
     * @param string $VariantCode
     * @return $this
     */
    public function setVariantCode($VariantCode)
    {
        $this->VariantCode = $VariantCode;
        return $this;
    }

    /**
     * @return string
     */
    public function getVariantCode()
    {
        return $this->VariantCode;
    }

    /**
     * @param string $scope
     * @return $this
     */
    public function setScope($scope)
    {
        $this->scope = $scope;
        return $this;
    }

    /**
     * @return string
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * @param int $scope_id
     * @return $this
     */
    public function setScopeId($scope_id)
    {
        $this->scope_id = $scope_id;
        return $this;
    }

    /**
     * @return int
     */
    public function getScopeId()
    {
        return $this->scope_id;
    }


}

