<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

class ReplItemRecipe
{

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property boolean $Exclusion
     */
    protected $Exclusion = null;

    /**
     * @property float $ExclusionPrice
     */
    protected $ExclusionPrice = null;

    /**
     * @property string $ImageId
     */
    protected $ImageId = null;

    /**
     * @property boolean $IsDeleted
     */
    protected $IsDeleted = null;

    /**
     * @property string $ItemNo
     */
    protected $ItemNo = null;

    /**
     * @property int $LineNo
     */
    protected $LineNo = null;

    /**
     * @property float $QuantityPer
     */
    protected $QuantityPer = null;

    /**
     * @property string $RecipeNo
     */
    protected $RecipeNo = null;

    /**
     * @property string $UnitOfMeasure
     */
    protected $UnitOfMeasure = null;

    /**
     * @property string $scope
     */
    protected $scope = null;

    /**
     * @property int $scope_id
     */
    protected $scope_id = null;

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param boolean $Exclusion
     * @return $this
     */
    public function setExclusion($Exclusion)
    {
        $this->Exclusion = $Exclusion;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getExclusion()
    {
        return $this->Exclusion;
    }

    /**
     * @param float $ExclusionPrice
     * @return $this
     */
    public function setExclusionPrice($ExclusionPrice)
    {
        $this->ExclusionPrice = $ExclusionPrice;
        return $this;
    }

    /**
     * @return float
     */
    public function getExclusionPrice()
    {
        return $this->ExclusionPrice;
    }

    /**
     * @param string $ImageId
     * @return $this
     */
    public function setImageId($ImageId)
    {
        $this->ImageId = $ImageId;
        return $this;
    }

    /**
     * @return string
     */
    public function getImageId()
    {
        return $this->ImageId;
    }

    /**
     * @param boolean $IsDeleted
     * @return $this
     */
    public function setIsDeleted($IsDeleted)
    {
        $this->IsDeleted = $IsDeleted;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsDeleted()
    {
        return $this->IsDeleted;
    }

    /**
     * @param string $ItemNo
     * @return $this
     */
    public function setItemNo($ItemNo)
    {
        $this->ItemNo = $ItemNo;
        return $this;
    }

    /**
     * @return string
     */
    public function getItemNo()
    {
        return $this->ItemNo;
    }

    /**
     * @param int $LineNo
     * @return $this
     */
    public function setLineNo($LineNo)
    {
        $this->LineNo = $LineNo;
        return $this;
    }

    /**
     * @return int
     */
    public function getLineNo()
    {
        return $this->LineNo;
    }

    /**
     * @param float $QuantityPer
     * @return $this
     */
    public function setQuantityPer($QuantityPer)
    {
        $this->QuantityPer = $QuantityPer;
        return $this;
    }

    /**
     * @return float
     */
    public function getQuantityPer()
    {
        return $this->QuantityPer;
    }

    /**
     * @param string $RecipeNo
     * @return $this
     */
    public function setRecipeNo($RecipeNo)
    {
        $this->RecipeNo = $RecipeNo;
        return $this;
    }

    /**
     * @return string
     */
    public function getRecipeNo()
    {
        return $this->RecipeNo;
    }

    /**
     * @param string $UnitOfMeasure
     * @return $this
     */
    public function setUnitOfMeasure($UnitOfMeasure)
    {
        $this->UnitOfMeasure = $UnitOfMeasure;
        return $this;
    }

    /**
     * @return string
     */
    public function getUnitOfMeasure()
    {
        return $this->UnitOfMeasure;
    }

    /**
     * @param string $scope
     * @return $this
     */
    public function setScope($scope)
    {
        $this->scope = $scope;
        return $this;
    }

    /**
     * @return string
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * @param int $scope_id
     * @return $this
     */
    public function setScopeId($scope_id)
    {
        $this->scope_id = $scope_id;
        return $this;
    }

    /**
     * @return int
     */
    public function getScopeId()
    {
        return $this->scope_id;
    }


}

