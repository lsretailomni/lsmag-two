<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\OrderEditType;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\RequestInterface;

class OrderEdit implements RequestInterface
{
    /**
     * @property Order $request
     */
    protected $request = null;

    /**
     * @property string $orderId
     */
    protected $orderId = null;

    /**
     * @property OrderEditType $editType
     */
    protected $editType = null;

    /**
     * @property boolean $returnOrderIdOnly
     */
    protected $returnOrderIdOnly = null;

    /**
     * @param Order $request
     * @return $this
     */
    public function setRequest($request)
    {
        $this->request = $request;
        return $this;
    }

    /**
     * @return Order
     */
    public function getRequest()
    {
        return $this->request;
    }

    /**
     * @param string $orderId
     * @return $this
     */
    public function setOrderId($orderId)
    {
        $this->orderId = $orderId;
        return $this;
    }

    /**
     * @return string
     */
    public function getOrderId()
    {
        return $this->orderId;
    }

    /**
     * @param OrderEditType|string $editType
     * @return $this
     * @throws InvalidEnumException
     */
    public function setEditType($editType)
    {
        if ( ! $editType instanceof OrderEditType ) {
            if ( OrderEditType::isValid( $editType ) )
                $editType = new OrderEditType( $editType );
            elseif ( OrderEditType::isValidKey( $editType ) )
                $editType = new OrderEditType( constant( "OrderEditType::$editType" ) );
            elseif ( ! $editType instanceof OrderEditType )
                throw new InvalidEnumException();
        }
        $this->editType = $editType->getValue();

        return $this;
    }

    /**
     * @return OrderEditType
     */
    public function getEditType()
    {
        return $this->editType;
    }

    /**
     * @param boolean $returnOrderIdOnly
     * @return $this
     */
    public function setReturnOrderIdOnly($returnOrderIdOnly)
    {
        $this->returnOrderIdOnly = $returnOrderIdOnly;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getReturnOrderIdOnly()
    {
        return $this->returnOrderIdOnly;
    }
}

