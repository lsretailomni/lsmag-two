<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\SearchType;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\RequestInterface;

class Search implements RequestInterface
{

    /**
     * @property string $cardId
     */
    protected $cardId = null;

    /**
     * @property string $search
     */
    protected $search = null;

    /**
     * @property SearchType $searchTypes
     */
    protected $searchTypes = null;

    /**
     * @param string $cardId
     * @return $this
     */
    public function setCardId($cardId)
    {
        $this->cardId = $cardId;
        return $this;
    }

    /**
     * @return string
     */
    public function getCardId()
    {
        return $this->cardId;
    }

    /**
     * @param string $search
     * @return $this
     */
    public function setSearch($search)
    {
        $this->search = $search;
        return $this;
    }

    /**
     * @return string
     */
    public function getSearch()
    {
        return $this->search;
    }

    /**
     * @param SearchType|string $searchTypes
     * @return $this
     * @throws InvalidEnumException
     */
    public function setSearchTypes($searchTypes)
    {
        if ( ! $searchTypes instanceof SearchType ) {
            if ( SearchType::isValid( $searchTypes ) )
                $searchTypes = new SearchType( $searchTypes );
            elseif ( SearchType::isValidKey( $searchTypes ) )
                $searchTypes = new SearchType( constant( "SearchType::$searchTypes" ) );
            elseif ( ! $searchTypes instanceof SearchType )
                throw new InvalidEnumException();
        }
        $this->searchTypes = $searchTypes->getValue();

        return $this;
    }

    /**
     * @return SearchType
     */
    public function getSearchTypes()
    {
        return $this->searchTypes;
    }


}

