<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\PaymentType;
use Ls\Omni\Exception\InvalidEnumException;

class OrderPayment
{

    /**
     * @property float $Amount
     */
    protected $Amount = null;

    /**
     * @property string $AuthorizationCode
     */
    protected $AuthorizationCode = null;

    /**
     * @property string $CardNumber
     */
    protected $CardNumber = null;

    /**
     * @property string $CardType
     */
    protected $CardType = null;

    /**
     * @property string $CurrencyCode
     */
    protected $CurrencyCode = null;

    /**
     * @property float $CurrencyFactor
     */
    protected $CurrencyFactor = null;

    /**
     * @property boolean $DepositPayment
     */
    protected $DepositPayment = null;

    /**
     * @property string $EFTCardType
     */
    protected $EFTCardType = null;

    /**
     * @property string $ExternalReference
     */
    protected $ExternalReference = null;

    /**
     * @property int $LineNumber
     */
    protected $LineNumber = null;

    /**
     * @property PaymentType $PaymentType
     */
    protected $PaymentType = null;

    /**
     * @property string $PreApprovedValidDate
     */
    protected $PreApprovedValidDate = null;

    /**
     * @property string $TenderType
     */
    protected $TenderType = null;

    /**
     * @property string $TokenNumber
     */
    protected $TokenNumber = null;

    /**
     * @param float $Amount
     * @return $this
     */
    public function setAmount($Amount)
    {
        $this->Amount = $Amount;
        return $this;
    }

    /**
     * @return float
     */
    public function getAmount()
    {
        return $this->Amount;
    }

    /**
     * @param string $AuthorizationCode
     * @return $this
     */
    public function setAuthorizationCode($AuthorizationCode)
    {
        $this->AuthorizationCode = $AuthorizationCode;
        return $this;
    }

    /**
     * @return string
     */
    public function getAuthorizationCode()
    {
        return $this->AuthorizationCode;
    }

    /**
     * @param string $CardNumber
     * @return $this
     */
    public function setCardNumber($CardNumber)
    {
        $this->CardNumber = $CardNumber;
        return $this;
    }

    /**
     * @return string
     */
    public function getCardNumber()
    {
        return $this->CardNumber;
    }

    /**
     * @param string $CardType
     * @return $this
     */
    public function setCardType($CardType)
    {
        $this->CardType = $CardType;
        return $this;
    }

    /**
     * @return string
     */
    public function getCardType()
    {
        return $this->CardType;
    }

    /**
     * @param string $CurrencyCode
     * @return $this
     */
    public function setCurrencyCode($CurrencyCode)
    {
        $this->CurrencyCode = $CurrencyCode;
        return $this;
    }

    /**
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->CurrencyCode;
    }

    /**
     * @param float $CurrencyFactor
     * @return $this
     */
    public function setCurrencyFactor($CurrencyFactor)
    {
        $this->CurrencyFactor = $CurrencyFactor;
        return $this;
    }

    /**
     * @return float
     */
    public function getCurrencyFactor()
    {
        return $this->CurrencyFactor;
    }

    /**
     * @param boolean $DepositPayment
     * @return $this
     */
    public function setDepositPayment($DepositPayment)
    {
        $this->DepositPayment = $DepositPayment;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getDepositPayment()
    {
        return $this->DepositPayment;
    }

    /**
     * @param string $EFTCardType
     * @return $this
     */
    public function setEFTCardType($EFTCardType)
    {
        $this->EFTCardType = $EFTCardType;
        return $this;
    }

    /**
     * @return string
     */
    public function getEFTCardType()
    {
        return $this->EFTCardType;
    }

    /**
     * @param string $ExternalReference
     * @return $this
     */
    public function setExternalReference($ExternalReference)
    {
        $this->ExternalReference = $ExternalReference;
        return $this;
    }

    /**
     * @return string
     */
    public function getExternalReference()
    {
        return $this->ExternalReference;
    }

    /**
     * @param int $LineNumber
     * @return $this
     */
    public function setLineNumber($LineNumber)
    {
        $this->LineNumber = $LineNumber;
        return $this;
    }

    /**
     * @return int
     */
    public function getLineNumber()
    {
        return $this->LineNumber;
    }

    /**
     * @param PaymentType|string $PaymentType
     * @return $this
     * @throws InvalidEnumException
     */
    public function setPaymentType($PaymentType)
    {
        if ( ! $PaymentType instanceof PaymentType ) {
            if ( PaymentType::isValid( $PaymentType ) )
                $PaymentType = new PaymentType( $PaymentType );
            elseif ( PaymentType::isValidKey( $PaymentType ) )
                $PaymentType = new PaymentType( constant( "PaymentType::$PaymentType" ) );
            elseif ( ! $PaymentType instanceof PaymentType )
                throw new InvalidEnumException();
        }
        $this->PaymentType = $PaymentType->getValue();

        return $this;
    }

    /**
     * @return PaymentType
     */
    public function getPaymentType()
    {
        return $this->PaymentType;
    }

    /**
     * @param string $PreApprovedValidDate
     * @return $this
     */
    public function setPreApprovedValidDate($PreApprovedValidDate)
    {
        $this->PreApprovedValidDate = $PreApprovedValidDate;
        return $this;
    }

    /**
     * @return string
     */
    public function getPreApprovedValidDate()
    {
        return $this->PreApprovedValidDate;
    }

    /**
     * @param string $TenderType
     * @return $this
     */
    public function setTenderType($TenderType)
    {
        $this->TenderType = $TenderType;
        return $this;
    }

    /**
     * @return string
     */
    public function getTenderType()
    {
        return $this->TenderType;
    }

    /**
     * @param string $TokenNumber
     * @return $this
     */
    public function setTokenNumber($TokenNumber)
    {
        $this->TokenNumber = $TokenNumber;
        return $this;
    }

    /**
     * @return string
     */
    public function getTokenNumber()
    {
        return $this->TokenNumber;
    }


}

