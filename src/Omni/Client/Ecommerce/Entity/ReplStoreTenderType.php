<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

class ReplStoreTenderType
{

    /**
     * @property string $AboveMinimumTenderId
     */
    protected $AboveMinimumTenderId = null;

    /**
     * @property int $AllowOverTender
     */
    protected $AllowOverTender = null;

    /**
     * @property int $AllowUnderTender
     */
    protected $AllowUnderTender = null;

    /**
     * @property int $AllowVoiding
     */
    protected $AllowVoiding = null;

    /**
     * @property string $ChangeTenderId
     */
    protected $ChangeTenderId = null;

    /**
     * @property int $CountingRequired
     */
    protected $CountingRequired = null;

    /**
     * @property int $ForeignCurrency
     */
    protected $ForeignCurrency = null;

    /**
     * @property boolean $IsDeleted
     */
    protected $IsDeleted = null;

    /**
     * @property float $MaximumOverTenderAmount
     */
    protected $MaximumOverTenderAmount = null;

    /**
     * @property float $MinimumChangeAmount
     */
    protected $MinimumChangeAmount = null;

    /**
     * @property string $Name
     */
    protected $Name = null;

    /**
     * @property string $OmniTenderTypeId
     */
    protected $OmniTenderTypeId = null;

    /**
     * @property int $OpenDrawer
     */
    protected $OpenDrawer = null;

    /**
     * @property int $ReturnAllowed
     */
    protected $ReturnAllowed = null;

    /**
     * @property float $Rounding
     */
    protected $Rounding = null;

    /**
     * @property int $RoundingMethode
     */
    protected $RoundingMethode = null;

    /**
     * @property string $StoreID
     */
    protected $StoreID = null;

    /**
     * @property int $TenderFunction
     */
    protected $TenderFunction = null;

    /**
     * @property string $TenderTypeId
     */
    protected $TenderTypeId = null;

    /**
     * @property int $ValidOnMobilePOS
     */
    protected $ValidOnMobilePOS = null;

    /**
     * @property string $scope
     */
    protected $scope = null;

    /**
     * @property int $scope_id
     */
    protected $scope_id = null;

    /**
     * @param string $AboveMinimumTenderId
     * @return $this
     */
    public function setAboveMinimumTenderId($AboveMinimumTenderId)
    {
        $this->AboveMinimumTenderId = $AboveMinimumTenderId;
        return $this;
    }

    /**
     * @return string
     */
    public function getAboveMinimumTenderId()
    {
        return $this->AboveMinimumTenderId;
    }

    /**
     * @param int $AllowOverTender
     * @return $this
     */
    public function setAllowOverTender($AllowOverTender)
    {
        $this->AllowOverTender = $AllowOverTender;
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowOverTender()
    {
        return $this->AllowOverTender;
    }

    /**
     * @param int $AllowUnderTender
     * @return $this
     */
    public function setAllowUnderTender($AllowUnderTender)
    {
        $this->AllowUnderTender = $AllowUnderTender;
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowUnderTender()
    {
        return $this->AllowUnderTender;
    }

    /**
     * @param int $AllowVoiding
     * @return $this
     */
    public function setAllowVoiding($AllowVoiding)
    {
        $this->AllowVoiding = $AllowVoiding;
        return $this;
    }

    /**
     * @return int
     */
    public function getAllowVoiding()
    {
        return $this->AllowVoiding;
    }

    /**
     * @param string $ChangeTenderId
     * @return $this
     */
    public function setChangeTenderId($ChangeTenderId)
    {
        $this->ChangeTenderId = $ChangeTenderId;
        return $this;
    }

    /**
     * @return string
     */
    public function getChangeTenderId()
    {
        return $this->ChangeTenderId;
    }

    /**
     * @param int $CountingRequired
     * @return $this
     */
    public function setCountingRequired($CountingRequired)
    {
        $this->CountingRequired = $CountingRequired;
        return $this;
    }

    /**
     * @return int
     */
    public function getCountingRequired()
    {
        return $this->CountingRequired;
    }

    /**
     * @param int $ForeignCurrency
     * @return $this
     */
    public function setForeignCurrency($ForeignCurrency)
    {
        $this->ForeignCurrency = $ForeignCurrency;
        return $this;
    }

    /**
     * @return int
     */
    public function getForeignCurrency()
    {
        return $this->ForeignCurrency;
    }

    /**
     * @param boolean $IsDeleted
     * @return $this
     */
    public function setIsDeleted($IsDeleted)
    {
        $this->IsDeleted = $IsDeleted;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIsDeleted()
    {
        return $this->IsDeleted;
    }

    /**
     * @param float $MaximumOverTenderAmount
     * @return $this
     */
    public function setMaximumOverTenderAmount($MaximumOverTenderAmount)
    {
        $this->MaximumOverTenderAmount = $MaximumOverTenderAmount;
        return $this;
    }

    /**
     * @return float
     */
    public function getMaximumOverTenderAmount()
    {
        return $this->MaximumOverTenderAmount;
    }

    /**
     * @param float $MinimumChangeAmount
     * @return $this
     */
    public function setMinimumChangeAmount($MinimumChangeAmount)
    {
        $this->MinimumChangeAmount = $MinimumChangeAmount;
        return $this;
    }

    /**
     * @return float
     */
    public function getMinimumChangeAmount()
    {
        return $this->MinimumChangeAmount;
    }

    /**
     * @param string $Name
     * @return $this
     */
    public function setName($Name)
    {
        $this->Name = $Name;
        return $this;
    }

    /**
     * @return string
     */
    public function getName()
    {
        return $this->Name;
    }

    /**
     * @param string $OmniTenderTypeId
     * @return $this
     */
    public function setOmniTenderTypeId($OmniTenderTypeId)
    {
        $this->OmniTenderTypeId = $OmniTenderTypeId;
        return $this;
    }

    /**
     * @return string
     */
    public function getOmniTenderTypeId()
    {
        return $this->OmniTenderTypeId;
    }

    /**
     * @param int $OpenDrawer
     * @return $this
     */
    public function setOpenDrawer($OpenDrawer)
    {
        $this->OpenDrawer = $OpenDrawer;
        return $this;
    }

    /**
     * @return int
     */
    public function getOpenDrawer()
    {
        return $this->OpenDrawer;
    }

    /**
     * @param int $ReturnAllowed
     * @return $this
     */
    public function setReturnAllowed($ReturnAllowed)
    {
        $this->ReturnAllowed = $ReturnAllowed;
        return $this;
    }

    /**
     * @return int
     */
    public function getReturnAllowed()
    {
        return $this->ReturnAllowed;
    }

    /**
     * @param float $Rounding
     * @return $this
     */
    public function setRounding($Rounding)
    {
        $this->Rounding = $Rounding;
        return $this;
    }

    /**
     * @return float
     */
    public function getRounding()
    {
        return $this->Rounding;
    }

    /**
     * @param int $RoundingMethode
     * @return $this
     */
    public function setRoundingMethode($RoundingMethode)
    {
        $this->RoundingMethode = $RoundingMethode;
        return $this;
    }

    /**
     * @return int
     */
    public function getRoundingMethode()
    {
        return $this->RoundingMethode;
    }

    /**
     * @param string $StoreID
     * @return $this
     */
    public function setStoreID($StoreID)
    {
        $this->StoreID = $StoreID;
        return $this;
    }

    /**
     * @return string
     */
    public function getStoreID()
    {
        return $this->StoreID;
    }

    /**
     * @param int $TenderFunction
     * @return $this
     */
    public function setTenderFunction($TenderFunction)
    {
        $this->TenderFunction = $TenderFunction;
        return $this;
    }

    /**
     * @return int
     */
    public function getTenderFunction()
    {
        return $this->TenderFunction;
    }

    /**
     * @param string $TenderTypeId
     * @return $this
     */
    public function setTenderTypeId($TenderTypeId)
    {
        $this->TenderTypeId = $TenderTypeId;
        return $this;
    }

    /**
     * @return string
     */
    public function getTenderTypeId()
    {
        return $this->TenderTypeId;
    }

    /**
     * @param int $ValidOnMobilePOS
     * @return $this
     */
    public function setValidOnMobilePOS($ValidOnMobilePOS)
    {
        $this->ValidOnMobilePOS = $ValidOnMobilePOS;
        return $this;
    }

    /**
     * @return int
     */
    public function getValidOnMobilePOS()
    {
        return $this->ValidOnMobilePOS;
    }

    /**
     * @param string $scope
     * @return $this
     */
    public function setScope($scope)
    {
        $this->scope = $scope;
        return $this;
    }

    /**
     * @return string
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * @param int $scope_id
     * @return $this
     */
    public function setScopeId($scope_id)
    {
        $this->scope_id = $scope_id;
        return $this;
    }

    /**
     * @return int
     */
    public function getScopeId()
    {
        return $this->scope_id;
    }


}

