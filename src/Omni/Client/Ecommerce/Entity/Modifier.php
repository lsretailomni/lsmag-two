<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

class Modifier extends Entity
{

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property int $DisplayOrder
     */
    protected $DisplayOrder = null;

    /**
     * @property MenuItem $Item
     */
    protected $Item = null;

    /**
     * @property float $MaximumSelection
     */
    protected $MaximumSelection = null;

    /**
     * @property float $MinimumSelection
     */
    protected $MinimumSelection = null;

    /**
     * @property float $OriginalQty
     */
    protected $OriginalQty = null;

    /**
     * @property float $Price
     */
    protected $Price = null;

    /**
     * @property float $Quantity
     */
    protected $Quantity = null;

    /**
     * @property boolean $RequiredSelection
     */
    protected $RequiredSelection = null;

    /**
     * @property string $UnitOfMeasure
     */
    protected $UnitOfMeasure = null;

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param int $DisplayOrder
     * @return $this
     */
    public function setDisplayOrder($DisplayOrder)
    {
        $this->DisplayOrder = $DisplayOrder;
        return $this;
    }

    /**
     * @return int
     */
    public function getDisplayOrder()
    {
        return $this->DisplayOrder;
    }

    /**
     * @param MenuItem $Item
     * @return $this
     */
    public function setItem($Item)
    {
        $this->Item = $Item;
        return $this;
    }

    /**
     * @return MenuItem
     */
    public function getItem()
    {
        return $this->Item;
    }

    /**
     * @param float $MaximumSelection
     * @return $this
     */
    public function setMaximumSelection($MaximumSelection)
    {
        $this->MaximumSelection = $MaximumSelection;
        return $this;
    }

    /**
     * @return float
     */
    public function getMaximumSelection()
    {
        return $this->MaximumSelection;
    }

    /**
     * @param float $MinimumSelection
     * @return $this
     */
    public function setMinimumSelection($MinimumSelection)
    {
        $this->MinimumSelection = $MinimumSelection;
        return $this;
    }

    /**
     * @return float
     */
    public function getMinimumSelection()
    {
        return $this->MinimumSelection;
    }

    /**
     * @param float $OriginalQty
     * @return $this
     */
    public function setOriginalQty($OriginalQty)
    {
        $this->OriginalQty = $OriginalQty;
        return $this;
    }

    /**
     * @return float
     */
    public function getOriginalQty()
    {
        return $this->OriginalQty;
    }

    /**
     * @param float $Price
     * @return $this
     */
    public function setPrice($Price)
    {
        $this->Price = $Price;
        return $this;
    }

    /**
     * @return float
     */
    public function getPrice()
    {
        return $this->Price;
    }

    /**
     * @param float $Quantity
     * @return $this
     */
    public function setQuantity($Quantity)
    {
        $this->Quantity = $Quantity;
        return $this;
    }

    /**
     * @return float
     */
    public function getQuantity()
    {
        return $this->Quantity;
    }

    /**
     * @param boolean $RequiredSelection
     * @return $this
     */
    public function setRequiredSelection($RequiredSelection)
    {
        $this->RequiredSelection = $RequiredSelection;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getRequiredSelection()
    {
        return $this->RequiredSelection;
    }

    /**
     * @param string $UnitOfMeasure
     * @return $this
     */
    public function setUnitOfMeasure($UnitOfMeasure)
    {
        $this->UnitOfMeasure = $UnitOfMeasure;
        return $this;
    }

    /**
     * @return string
     */
    public function getUnitOfMeasure()
    {
        return $this->UnitOfMeasure;
    }


}

