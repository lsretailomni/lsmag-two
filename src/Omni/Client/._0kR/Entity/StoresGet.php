<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\StoreGetType;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\RequestInterface;

class StoresGet implements RequestInterface
{
    /**
     * @property StoreGetType $storeType
     */
    protected $storeType = null;

    /**
     * @property boolean $includeDetails
     */
    protected $includeDetails = null;

    /**
     * @property boolean $includeImages
     */
    protected $includeImages = null;

    /**
     * @param StoreGetType|string $storeType
     * @return $this
     * @throws InvalidEnumException
     */
    public function setStoreType($storeType)
    {
        if ( ! $storeType instanceof StoreGetType ) {
            if ( StoreGetType::isValid( $storeType ) )
                $storeType = new StoreGetType( $storeType );
            elseif ( StoreGetType::isValidKey( $storeType ) )
                $storeType = new StoreGetType( constant( "StoreGetType::$storeType" ) );
            elseif ( ! $storeType instanceof StoreGetType )
                throw new InvalidEnumException();
        }
        $this->storeType = $storeType->getValue();

        return $this;
    }

    /**
     * @return StoreGetType
     */
    public function getStoreType()
    {
        return $this->storeType;
    }

    /**
     * @param boolean $includeDetails
     * @return $this
     */
    public function setIncludeDetails($includeDetails)
    {
        $this->includeDetails = $includeDetails;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIncludeDetails()
    {
        return $this->includeDetails;
    }

    /**
     * @param boolean $includeImages
     * @return $this
     */
    public function setIncludeImages($includeImages)
    {
        $this->includeImages = $includeImages;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getIncludeImages()
    {
        return $this->includeImages;
    }
}

