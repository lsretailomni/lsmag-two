<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\ProfileDataType;
use Ls\Omni\Exception\InvalidEnumException;

class Profile extends Entity
{
    /**
     * @property boolean $ContactValue
     */
    protected $ContactValue = null;

    /**
     * @property ProfileDataType $DataType
     */
    protected $DataType = null;

    /**
     * @property string $DefaultValue
     */
    protected $DefaultValue = null;

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property boolean $Mandatory
     */
    protected $Mandatory = null;

    /**
     * @property string $TextValue
     */
    protected $TextValue = null;

    /**
     * @param boolean $ContactValue
     * @return $this
     */
    public function setContactValue($ContactValue)
    {
        $this->ContactValue = $ContactValue;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getContactValue()
    {
        return $this->ContactValue;
    }

    /**
     * @param ProfileDataType|string $DataType
     * @return $this
     * @throws InvalidEnumException
     */
    public function setDataType($DataType)
    {
        if ( ! $DataType instanceof ProfileDataType ) {
            if ( ProfileDataType::isValid( $DataType ) )
                $DataType = new ProfileDataType( $DataType );
            elseif ( ProfileDataType::isValidKey( $DataType ) )
                $DataType = new ProfileDataType( constant( "ProfileDataType::$DataType" ) );
            elseif ( ! $DataType instanceof ProfileDataType )
                throw new InvalidEnumException();
        }
        $this->DataType = $DataType->getValue();

        return $this;
    }

    /**
     * @return ProfileDataType
     */
    public function getDataType()
    {
        return $this->DataType;
    }

    /**
     * @param string $DefaultValue
     * @return $this
     */
    public function setDefaultValue($DefaultValue)
    {
        $this->DefaultValue = $DefaultValue;
        return $this;
    }

    /**
     * @return string
     */
    public function getDefaultValue()
    {
        return $this->DefaultValue;
    }

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param boolean $Mandatory
     * @return $this
     */
    public function setMandatory($Mandatory)
    {
        $this->Mandatory = $Mandatory;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getMandatory()
    {
        return $this->Mandatory;
    }

    /**
     * @param string $TextValue
     * @return $this
     */
    public function setTextValue($TextValue)
    {
        $this->TextValue = $TextValue;
        return $this;
    }

    /**
     * @return string
     */
    public function getTextValue()
    {
        return $this->TextValue;
    }
}

