<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="LsLoggedInConfigurablePDPTest">
        <annotations>
            <features value="LsPDP"/>
            <stories value="Logged in customer should be able to see all features available for a configurable product"/>
            <title value="Logged in Customer should be able to see all features available for a configurable product"/>
            <description value="Logged in Customer should be able to see all features available for a configurable product"/>
            <severity value="CRITICAL"/>
            <group value="ls"/>
            <group value="lsPDP"/>
        </annotations>
        <before>
            <actionGroup ref="LsSetRequiredConfigsActionGroup" stepKey="setRequiredConfigs"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
            <actionGroup ref="LsReplicateStoreDataActionGroup" stepKey="replicateStores"/>
            <createData entity="LsConfigurableProduct1" stepKey="createConfigProduct" />
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <createData entity="LsVariantProduct1" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryTestImage" stepKey="createConfigChildProduct1Image">
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>
            <createData entity="LsVariantProduct2" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ApiProductAttributeMediaGalleryEntryMagentoLogo" stepKey="createConfigChildProduct2Image">
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteConfigChildProduct2"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="LsResetStoreDataActionGroup" stepKey="resetStores"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="LoginToStorefrontWithUsernameActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="Ls_Simple_US_Customer"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontCustomerDashboardInformationActionGroup" stepKey="customerDashboardInformation"  after="loginToStorefrontAccount" />

        <amOnPage url="{{StorefrontProductPage.url($createConfigProduct.custom_attributes[url_key]$)}}" stepKey="openProductPage" />
        <wait stepKey="waitForSessionLoad" time="5"/>
        <waitForPageLoad stepKey="waitForProductPageOpen" />
        <click selector="{{StorefrontProductInfoMainSection.checkAvailability}}" stepKey="clickCheckAvailabilityLinkNoOption" />
        <see selector=".product-options-wrapper .field.configurable:nth-child(1) .control .mage-error" userInput="This is a required field." stepKey="seeValidationMsg"/>
        <wait stepKey="waitForSessionLoad1" time="5"/>
        <selectOption userInput="$$createConfigProductAttributeOption2.option[store_labels][1][label]$$" selector="{{StorefrontProductInfoMainSection.optionByAttributeId($$createConfigProductAttribute.attribute_id$$)}}" stepKey="cartConfigProductFillOption"/>
        <actionGroup ref="LsAvailabilityPopupActionGroup" stepKey="validateCheckAvailabilityModal"/>
        <actionGroup ref="LsDiscountRecommendationsActionGroup" stepKey="validateDiscountRecommendations"/>

        <actionGroup ref="DeleteCustomerByEmailActionGroup" stepKey="deleteNewUser">
            <argument name="email" value="{{Ls_Simple_US_Customer.email}}"/>
        </actionGroup>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetGrid"/>
    </test>
</tests>
