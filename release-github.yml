trigger:
  branches:
    include:
      - release
variables:
  BRANCH_NAME: release
steps:
  - checkout: self
    fetchTags: true
    fetchDepth: 0

  - script: |
      cd /home/vsts/work/1/s/
      TAG_NAME=$(git describe --abbrev=0 --tags)
      echo "##vso[task.setvariable variable=LATEST_TAG_NAME]$TAG_NAME"
    displayName: 'Finding Latest Tag Name'
    workingDirectory: $(System.DefaultWorkingDirectory)

  - script: |
      mkdir release
      CORE_MODULE_REPO_URL=$(AZURE_MODULE_REPO_URL)
      AUTH=$(echo -n ":$(AZURE_PERSONAL_ACCESS_TOKEN)" | openssl base64 | tr -d '\n')
      git -c http.$CORE_MODULE_REPO_URL.extraheader="AUTHORIZATION: basic $AUTH" clone $CORE_MODULE_REPO_URL --branch $(BRANCH_NAME) release
      cd release
      git status
      git remote rm origin
      git remote add origin https://github.com/$(GITHUB_REPO_NAME).git
      git remote -v
      sudo git config --global user.email $(EMAIL) & git config --global user.name $(USERNAME)
      git push https://$(USERNAME):$(GITHUB_PERSONAL_ACCESS_TOKEN)@github.com/$(GITHUB_REPO_NAME).git $(LATEST_TAG_NAME)
    displayName: 'Publishing Changes to Github Repository'
    workingDirectory: $(System.DefaultWorkingDirectory)

  - script: |
      sudo apt-get install sshpass
      sshpass -p "$(DEMO_SERVER_1_SSH_PASSWORD)" ssh -o StrictHostKeyChecking=no $(DEMO_SERVER_1_SSH_USERNAME)@$(DEMO_SERVER_1_SSH_HOSTNAME) << EOF
        cd $(DEMO_SERVER_1_SSH_DIRECTORY_PATH)
        php bin/magento ma:e
        composer require "$(COMPOSER_REPO_NAME):$(LATEST_TAG_NAME)" --no-update && composer update $(COMPOSER_REPO_NAME)
        php bin/magento s:up && php bin/magento d:m:se production
        php bin/magento ma:d
      EOF
    displayName: 'Deploying Newly Released Version on Ls Retail lsmag2 Demo Server'
    workingDirectory: $(System.DefaultWorkingDirectory)

  - script: |
      sudo apt-get install sshpass
      sshpass -p "$(DEMO_SERVER_2_SSH_PASSWORD)" ssh -o StrictHostKeyChecking=no $(DEMO_SERVER_2_SSH_USERNAME)@$(DEMO_SERVER_2_SSH_HOSTNAME) << EOF
        cd $(DEMO_SERVER_2_SSH_DIRECTORY_PATH)
        php bin/magento ma:e
        composer require "$(COMPOSER_REPO_NAME):$(LATEST_TAG_NAME)" --no-update && composer update $(COMPOSER_REPO_NAME)
        php bin/magento s:up && sudo chown -R AzureUser:AzureUser generated && php bin/magento d:m:se production
        php bin/magento ma:d
      EOF
    displayName: 'Deploying Newly Released Version on Ls Retail ls-magento Demo Server'
    workingDirectory: $(System.DefaultWorkingDirectory)
